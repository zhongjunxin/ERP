<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.Commoditylnformation.mapper.CommoditylnformationManageMapper">

    <resultMap type="CommoditylnformationManage" id="CommoditylnformationManageResult">
        <result property="productNumber"    column="product_number"    />
        <result property="productImage"    column="product_image"    />
        <result property="productName"    column="product_name"    />
        <result property="categoryId"    column="category_id"    />
        <result property="categoryName"    column="category_name"    />
        <result property="brandId"    column="brand_id"    />
        <result property="brandName"    column="brand_name"    />
        <result property="unitId"    column="unit_id"    />
        <result property="unitName"    column="unit_name"    />
        <result property="suggestedPurchasePrice"    column="suggested_purchase_price"    />
        <result property="suggestedSalePrice"    column="suggested_sale_price"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectCommoditylnformationManageVo">
        select
        m.product_number,
        m.product_image,
        m.product_name,
        m.category_id,
        c.category_name,
        m.brand_id,
        b.brand_name,
        m.unit_id,
        u.unit_name,
        m.suggested_purchase_price,
        m.suggested_sale_price,
        m.status,
        m.create_by,
        m.create_time,
        m.update_by,
        m.update_time,
        m.remark
        from commoditylnformation_manage m
        left join commoditylnformation_classification c on m.category_id = c.id
        left join commoditylnformation_brand b on m.brand_id = b.id
        left join commoditylnformation_unit u on m.unit_id = u.id
    </sql>

    <select id="selectCommoditylnformationManageList" parameterType="CommoditylnformationManage" resultMap="CommoditylnformationManageResult">
        <include refid="selectCommoditylnformationManageVo"/>
        <where>
            <if test="productNumber != null  and productNumber != ''"> and m.product_number = #{productNumber}</if>
            <if test="productName != null  and productName != ''"> and m.product_name like concat('%', #{productName}, '%')</if>
            <if test="categoryId != null "> and m.category_id = #{categoryId}</if>
            <if test="brandId != null "> and m.brand_id = #{brandId}</if>
            <if test="unitId != null "> and m.unit_id = #{unitId}</if>
            <if test="suggestedPurchasePrice != null "> and m.suggested_purchase_price = #{suggestedPurchasePrice}</if>
            <if test="suggestedSalePrice != null "> and m.suggested_sale_price = #{suggestedSalePrice}</if>
            <if test="status != null  and status != ''"> and m.status = #{status}</if>
        </where>
        order by m.create_time desc
    </select>

    <select id="selectCommoditylnformationManageByProductNumber" parameterType="String" resultMap="CommoditylnformationManageResult">
        <include refid="selectCommoditylnformationManageVo"/>
        where m.product_number = #{productNumber}
    </select>

    <insert id="insertCommoditylnformationManage" parameterType="CommoditylnformationManage">
        insert into commoditylnformation_manage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            product_number,
            product_image,
            product_name,
            category_id,
            brand_id,
            unit_id,
            suggested_purchase_price,
            suggested_sale_price,
            status,
            create_by,
            create_time,
            update_by,
            update_time,
            remark
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{productNumber},
            #{productImage},
            #{productName},
            #{categoryId},
            #{brandId},
            #{unitId},
            #{suggestedPurchasePrice},
            #{suggestedSalePrice},
            #{status},
            #{createBy},
            #{createTime},
            #{updateBy},
            #{updateTime},
            #{remark}
        </trim>
    </insert>

    <update id="updateCommoditylnformationManage" parameterType="CommoditylnformationManage">
        update commoditylnformation_manage
        <trim prefix="SET" suffixOverrides=",">
            product_image = #{productImage},
            product_name = #{productName},
            category_id = #{categoryId},
            brand_id = #{brandId},
            unit_id = #{unitId},
            suggested_purchase_price = #{suggestedPurchasePrice},
            suggested_sale_price = #{suggestedSalePrice},
            status = #{status},
            update_by = #{updateBy},
            update_time = #{updateTime},
            remark = #{remark}
        </trim>
        where product_number = #{productNumber}
    </update>

    <update id="updateStatus" parameterType="CommoditylnformationManage">
        update commoditylnformation_manage
        <trim prefix="SET" suffixOverrides=",">
            status = #{status},
            update_by = #{updateBy},
            update_time = #{updateTime}
        </trim>
        where product_number = #{productNumber}
    </update>

    <delete id="deleteCommoditylnformationManageByProductNumber" parameterType="String">
        delete from commoditylnformation_manage where product_number = #{productNumber}
    </delete>

    <delete id="deleteCommoditylnformationManageByProductNumbers" parameterType="String">
        delete from commoditylnformation_manage where product_number in
        <foreach item="productNumber" collection="array" open="(" separator="," close=")">
            #{productNumber}
        </foreach>
    </delete>

    <!-- 添加新方法 -->
    <select id="selectAllCategories" resultType="map">
        SELECT id as value, category_name as name
        FROM commoditylnformation_classification
        WHERE status = 1
    </select>

    <select id="selectAllBrands" resultType="map">
        SELECT id as value, brand_name as name
        FROM commoditylnformation_brand
        WHERE status = 1
    </select>

    <select id="selectAllUnits" resultType="map">
        SELECT id as value, unit_name as name
        FROM commoditylnformation_unit
        WHERE status = 1
    </select>
</mapper>